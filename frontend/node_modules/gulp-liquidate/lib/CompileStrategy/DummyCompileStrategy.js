#!/usr/bin/nodejs
/* jshint node:true, devel:true */

/*
 * @author Xunnamius
 *
 * @requires CompileStrategy
 */

"use strict";

const CompileStrategy = require('./CompileStrategy');

/**
 * A compilation strategy that does nothing. It passes back whatever it
 * receives.
 */
class DummyCompileStrategy extends CompileStrategy
{
    /**
     * The compile method accepts raw text (a string) as an input and outputs
     * that same raw text. No compilation happens.
     *
     * @param {String} raw     The text to compile
     * @param {Object} context Any local variables that should be passed into
     * the compilation engine
     *
     * @returns {Promise} A promise that resolves into an Object containing the
     * raw text and context passed to this method. The keys on the object are
     * "raw" and "context" respectively.
     */
    compile(raw, context)
    {
        return new Promise(resolve => resolve({ 'raw': raw, 'context': context }));
    }

    /**
     * The getActiveEngine method will return null because this strategy does
     * not use an engine internally.
     *
     * @returns {NULL} Returns null every time
     */
    getActiveEngine(){}
}

module.exports = DummyCompileStrategy;
