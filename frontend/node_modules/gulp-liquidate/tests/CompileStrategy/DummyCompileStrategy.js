#!/usr/bin/nodejs
/* jshint node:true, mocha:true, devel:true */

/*
 * @author Xunnamius
 */

"use strict";

const expects = require('chai').use(require('chai-as-promised')).expect;
const DummyCompileStrategy = require('../../lib/CompileStrategy/DummyCompileStrategy');

describe('DummyCompileStrategy', () =>
{
    let dummyCompileStrategy = null;

    beforeEach(() =>
    {
        dummyCompileStrategy = new DummyCompileStrategy();
    });

    describe('#compile', () =>
    {
        it('does not throw a ReferenceError since this class is instantiated directly', () =>
        {
            expects(() => dummyCompileStrategy.compile('test', {})).to.not.throw(ReferenceError);
        });

        it('returns a string identical to the string that was passed into it', () =>
        {
            return dummyCompileStrategy.compile('test2', {}).then(actual =>
            {
                expects(actual.raw).to.equal('test2');
                expects(actual.context).to.deep.equal({});
            });
        });
    });

    describe('#getActiveEngine', () =>
    {
        it('does not throw a ReferenceError since this class is instantiated directly', () =>
        {
            expects(() => dummyCompileStrategy.getActiveEngine()).to.not.throw(ReferenceError);
        });
    });
});
