#!/usr/bin/nodejs
/* jshint node:true, mocha:true, devel:true */

/*
 * @author Xunnamius
 */

"use strict";

const expects = require('chai').use(require('chai-as-promised')).expect;
const createLiquidEngine = require('shopify-liquid');

const Promise = require('bluebird');
const ShopifyLiquidCompileStrategy = require('../../lib/CompileStrategy/ShopifyLiquidCompileStrategy');

describe('CompileStrategy', () =>
{
    let shopifyLiquidCompileStrategy = null;
    let liquidEngine = null;

    beforeEach(() =>
    {
        liquidEngine = createLiquidEngine();
        shopifyLiquidCompileStrategy = new ShopifyLiquidCompileStrategy(liquidEngine);
    });

    describe('#compile', () =>
    {
        it('does not throw a ReferenceError since this class is instantiated directly', () =>
        {
            expects(() => shopifyLiquidCompileStrategy.compile('test', {})).to.not.throw(ReferenceError);
        });

        it('returns compiled strings as expected', () =>
        {
            return expects(shopifyLiquidCompileStrategy.compile('Hi, my name is {{ name }}.', { name: 'Abe' }))
                .to.eventually.equal('Hi, my name is Abe.');
        });
    });

    describe('#getActiveEngine', () =>
    {
        it('does not throw a ReferenceError since this class is instantiated directly', () =>
        {
            expects(() => shopifyLiquidCompileStrategy.getActiveEngine()).to.not.throw(ReferenceError);
        });

        it('returns the internal engine as expected', () =>
        {
            expects(shopifyLiquidCompileStrategy.getActiveEngine()).to.equal(liquidEngine);
        });
    });
});
